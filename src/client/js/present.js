module.exports = function drawPresent(ctx) {
ctx.save();
ctx.beginPath();
ctx.moveTo(0,0);
ctx.lineTo(64,0);
ctx.lineTo(64,64);
ctx.lineTo(0,64);
ctx.closePath();
ctx.clip();
ctx.translate(0,0);
ctx.translate(0,0);
ctx.scale(1,1);
ctx.translate(0,0);
ctx.strokeStyle = 'rgba(0,0,0,0)';
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.save();
ctx.save();
ctx.fillStyle = "#4daf7c";
ctx.beginPath();
ctx.moveTo(29.34,31.216);
ctx.lineTo(34.66,31.216);
ctx.quadraticCurveTo(34.66,31.216,34.66,31.216);
ctx.lineTo(34.66,48.38);
ctx.quadraticCurveTo(34.66,48.38,34.66,48.38);
ctx.lineTo(29.34,48.38);
ctx.quadraticCurveTo(29.34,48.38,29.34,48.38);
ctx.lineTo(29.34,31.216);
ctx.quadraticCurveTo(29.34,31.216,29.34,31.216);
ctx.closePath();
ctx.fill();
ctx.stroke();
ctx.restore();
ctx.save();
ctx.fillStyle = "#d64541";
ctx.beginPath();
ctx.moveTo(19.551,31.216);
ctx.lineTo(27.339999999999996,31.216);
ctx.quadraticCurveTo(27.339999999999996,31.216,27.339999999999996,31.216);
ctx.lineTo(27.339999999999996,48.38);
ctx.quadraticCurveTo(27.339999999999996,48.38,27.339999999999996,48.38);
ctx.lineTo(19.551,48.38);
ctx.quadraticCurveTo(19.551,48.38,19.551,48.38);
ctx.lineTo(19.551,31.216);
ctx.quadraticCurveTo(19.551,31.216,19.551,31.216);
ctx.closePath();
ctx.fill();
ctx.stroke();
ctx.restore();
ctx.save();
ctx.fillStyle = "#d64541";
ctx.beginPath();
ctx.moveTo(18,29.216);
ctx.lineTo(18.551,29.216);
ctx.lineTo(27.34,29.216);
ctx.lineTo(27.34,22.729);
ctx.lineTo(18,22.729);
ctx.lineTo(18,29.216);
ctx.closePath();
ctx.fill();
ctx.stroke();
ctx.restore();
ctx.save();
ctx.fillStyle = "#d64541";
ctx.beginPath();
ctx.moveTo(36.66,31.216);
ctx.lineTo(44.449,31.216);
ctx.quadraticCurveTo(44.449,31.216,44.449,31.216);
ctx.lineTo(44.449,48.38);
ctx.quadraticCurveTo(44.449,48.38,44.449,48.38);
ctx.lineTo(36.66,48.38);
ctx.quadraticCurveTo(36.66,48.38,36.66,48.38);
ctx.lineTo(36.66,31.216);
ctx.quadraticCurveTo(36.66,31.216,36.66,31.216);
ctx.closePath();
ctx.fill();
ctx.stroke();
ctx.restore();
ctx.save();
ctx.fillStyle = "#d64541";
ctx.beginPath();
ctx.moveTo(36.66,29.216);
ctx.lineTo(45.449,29.216);
ctx.lineTo(46,29.216);
ctx.lineTo(46,22.729);
ctx.lineTo(36.66,22.729);
ctx.lineTo(36.66,29.216);
ctx.closePath();
ctx.fill();
ctx.stroke();
ctx.restore();
ctx.save();
ctx.fillStyle = "#4daf7c";
ctx.beginPath();
ctx.moveTo(29.34,22.729);
ctx.lineTo(34.66,22.729);
ctx.quadraticCurveTo(34.66,22.729,34.66,22.729);
ctx.lineTo(34.66,29.216);
ctx.quadraticCurveTo(34.66,29.216,34.66,29.216);
ctx.lineTo(29.34,29.216);
ctx.quadraticCurveTo(29.34,29.216,29.34,29.216);
ctx.lineTo(29.34,22.729);
ctx.quadraticCurveTo(29.34,22.729,29.34,22.729);
ctx.closePath();
ctx.fill();
ctx.stroke();
ctx.restore();
ctx.save();
ctx.fillStyle = "#26251d";
ctx.beginPath();
ctx.moveTo(47,20.729);
ctx.lineTo(43.644,20.729);
ctx.bezierCurveTo(45.478,18.957,45.885,16.075,44.469,13.829999999999998);
ctx.bezierCurveTo(43.453,12.224999999999998,41.712,11.266999999999998,39.812,11.266999999999998);
ctx.bezierCurveTo(38.771,11.266999999999998,37.754999999999995,11.561999999999998,36.873999999999995,12.120999999999997);
ctx.bezierCurveTo(34.93599999999999,13.344999999999997,32.86299999999999,18.020999999999997,32.001,20.134999999999998);
ctx.bezierCurveTo(31.137999999999998,18.020999999999997,29.063999999999997,13.343999999999998,27.127999999999997,12.121999999999998);
ctx.bezierCurveTo(26.244999999999997,11.562999999999999,25.229999999999997,11.267999999999999,24.188999999999997,11.267999999999999);
ctx.bezierCurveTo(22.288999999999998,11.267999999999999,20.546999999999997,12.225999999999999,19.530999999999995,13.831999999999999);
ctx.bezierCurveTo(18.117999999999995,16.072,18.523999999999994,18.951999999999998,20.353999999999996,20.729);
ctx.lineTo(17,20.729);
ctx.bezierCurveTo(16.448,20.729,16,21.176,16,21.729);
ctx.lineTo(16,30.216);
ctx.bezierCurveTo(16,30.769000000000002,16.448,31.216,17,31.216);
ctx.lineTo(17.551,31.216);
ctx.lineTo(17.551,49.38);
ctx.bezierCurveTo(17.551,49.933,17.997999999999998,50.38,18.551,50.38);
ctx.lineTo(28.339999999999996,50.38);
ctx.lineTo(35.66,50.38);
ctx.lineTo(45.449,50.38);
ctx.bezierCurveTo(46.001999999999995,50.38,46.449,49.933,46.449,49.38);
ctx.lineTo(46.449,31.216);
ctx.lineTo(47,31.216);
ctx.bezierCurveTo(47.553,31.216,48,30.769000000000002,48,30.216);
ctx.lineTo(48,21.729);
ctx.bezierCurveTo(48,21.176,47.553,20.729,47,20.729);
ctx.closePath();
ctx.moveTo(46,29.216);
ctx.lineTo(45.449,29.216);
ctx.lineTo(36.66,29.216);
ctx.lineTo(36.66,22.729);
ctx.lineTo(46,22.729);
ctx.lineTo(46,29.216);
ctx.closePath();
ctx.moveTo(34.66,22.729);
ctx.lineTo(34.66,29.216);
ctx.lineTo(29.339999999999996,29.216);
ctx.lineTo(29.339999999999996,22.729);
ctx.lineTo(34.66,22.729);
ctx.closePath();
ctx.moveTo(37.942,13.81);
ctx.bezierCurveTo(38.504,13.455,39.15,13.267000000000001,39.811,13.267000000000001);
ctx.bezierCurveTo(41.022,13.267000000000001,42.131,13.877,42.778,14.899000000000001);
ctx.bezierCurveTo(43.81,16.536,43.321999999999996,18.705000000000002,41.687999999999995,19.736);
ctx.bezierCurveTo(41.343999999999994,19.954,40.117,20.462,36.166999999999994,20.462);
ctx.bezierCurveTo(35.379,20.462,34.64099999999999,20.441,34.04899999999999,20.416);
ctx.bezierCurveTo(35.139,17.838,36.812,14.524,37.942,13.81);
ctx.closePath();
ctx.moveTo(21.22,14.899);
ctx.bezierCurveTo(21.866999999999997,13.876999999999999,22.977,13.267,24.188,13.267);
ctx.bezierCurveTo(24.849,13.267,25.496,13.455,26.058,13.812);
ctx.bezierCurveTo(27.187,14.524,28.86,17.839,29.951,20.416);
ctx.bezierCurveTo(29.354,20.441,28.611,20.463,27.814,20.463);
ctx.lineTo(27.813,20.463);
ctx.bezierCurveTo(23.875999999999998,20.463,22.653,19.958000000000002,22.311,19.742);
ctx.bezierCurveTo(20.678,18.706,20.189,16.534,21.22,14.899);
ctx.closePath();
ctx.moveTo(18,22.729);
ctx.lineTo(27.34,22.729);
ctx.lineTo(27.34,29.216);
ctx.lineTo(18.551000000000002,29.216);
ctx.lineTo(18,29.216);
ctx.lineTo(18,22.729);
ctx.closePath();
ctx.moveTo(19.551,31.216);
ctx.lineTo(27.339999999999996,31.216);
ctx.lineTo(27.339999999999996,48.38);
ctx.lineTo(19.550999999999995,48.38);
ctx.lineTo(19.550999999999995,31.216);
ctx.closePath();
ctx.moveTo(29.34,48.38);
ctx.lineTo(29.34,31.216);
ctx.lineTo(34.66,31.216);
ctx.lineTo(34.66,48.38);
ctx.lineTo(29.34,48.38);
ctx.closePath();
ctx.moveTo(44.449,48.38);
ctx.lineTo(36.66,48.38);
ctx.lineTo(36.66,31.216);
ctx.lineTo(44.449,31.216);
ctx.lineTo(44.449,48.38);
ctx.closePath();
ctx.fill();
ctx.stroke();
ctx.restore();
ctx.restore();
ctx.restore();
};